name: Build .NET Core Nugets

on: [push, pull_request]

env:
  BRANCH:             "${{ github.ref }}""
  PRERELEASE:         ${{ github.ref != 'refs/heads/master' }}
  RELEASE:            ${{ github.ref == 'refs/heads/master' }}
  RELEASE_REPOSITORY: ""
  RELEASE_KEY:        ""
  PRERELEASE_Key:     ""

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Set Variables
      run: |
        if [ $BRANCH != "refs/heads/master" ]
        then
          echo "::set-env name=PRERELEASE::true"
        else

        fi

    - name: Test my variable
      run: |
        if $PRERELEASE
        then
          echo "this is prerelease: $PRERELEASE"
        else

        fi

    - name: Checkout
      uses: actions/checkout@v2

    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.2
      with:
          versionSpec: '5.2.x'

    - name: Use GitVersion
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0.9.2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101

    - name: Build
      run: | 
        if $RELEASE
          then
            CONFIGURATION=Release
          elif
            CONFIGURATION=Debug
          fi
        VERSION="${{ steps.gitversion.outputs.assemblySemVer }}"
        dotnet build --configuration $CONFIGURATION -p:Version=$VERSION -p:DebugType=portable

    - name: Test
      run: dotnet test --no-build --no-restore --verbosity normal

    - name: Pack Nugets
      run: dotnet pack -p:PackageVersion= -p:SymbolPackageFormat=snupkg --include-symbols --no-build

    - name: Upload Nuget
      run: |
        declare -a PACKAGES=(
          "Miruken.AspNetCore"
          "Miruken.AspNetCore.SignalR.Api"
          "Miruken.AspNetCore.Swagger"
        )
        for package in "${PACKAGES[@]}"
          do
            if $RELEASE
            then
              VERSION="${{ steps.gitversion.outputs.semVer }}"
              REPO="http://localhost:8081/repository/Nuget-Release/"
              API_KEY=""
            elif
              VERSION="${{ steps.gitversion.outputs.informationalVersion }}"
              REPO="http://localhost:8081/repository/Nuget-Prerelease/"
              API_KEY=""
            fi
            PACKAGE_PATH="Source\Miruken.AspNetCore.SignalR.Api\bin\Miruken.AspNetCore.SignalR.Api.1.0.6-Alpha.3.nupkg"

            dotnet pack -p:PackageVersion= -p:SymbolPackageFormat=snupkg --include-symbols --no-build
            dotnet nuget push $PACKAGE_PATH --api-key $API_KEY --source $REPO
          done

    - name: Tag Release Build 
      if: env.RELEASE == 'true' 
      run: |
        TAG="${{ steps.gitversion.outputs.semVer }}"
        git tag $tag
        git push origin $tag


